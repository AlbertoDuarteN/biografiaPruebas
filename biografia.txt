Mi nombre es Alberto Duarte
Este es un cambio pequeño
Tengo 29 años y actualmente estoy trabajando en Belcorp como Tecnico de Validaciones

Estoy buscando trabajo y estoy estudiando Análisis y desarrollo de software
Mi meta es tenerlo todo en este mundo y viajar para conocer todo lo que Dios creó.
tengo dos hijas y una gran esposa, me siento orgulloso de nuestra familia
 Estoy prácticando el uso de pull y push en Git y GitHub para entender el flujo de control de versiones
 
********************************************************************************************************
GENERANDO LLAVES SSH EN GIT DESDE CERO
********************************************************************************************************


 12/02/2023
 En esta ocasión voy a escribir los pasos necesarios para hacer la creación y vinculación de Git y GitHub
 Iré intercalando entre VSCode y GitHub haciendo las modificaciones para entrenar la secuencia

1) Lo primero que hay que hacer es verificar que la terminal de Git se encuentre registrada con el nombre de usuario y el correo electrónico de gitHub
Para realizar esta verificación hay que ingresar a la terminal de git y escribir el siguiente comando

- git config -l

Y verificar en la lista si se encuentra correctamente escrito el user.name y el user.email
Si no, entonces configurar con el comando

- git config --global user.name "aqui el nombre de usuario" ----> Presionar enter
- git config --global user.email "aqui el correo electrónico" ----> Presionar enter

2) El segundo paso es recordar que tanto Git como Github son capaces de generar llaves públicas y privadas que es lo que permite realizar la conexión entre ambas plataformas.

Hay una serie de comandos que se deben ejecutar para la generación de estas llaves SSH

 - Primero hay que estar en la carpeta principal escribiendo $ cd
 - Cersiorarse que aparece el signo del sombrero de la ñ
 - Escribir el siguiente comando

                ss-keygen -t rsa -b 4096 -C "Aquí el correo electronico para conectar con gitHub"

    Presionar enter hasta que se haya generado.


********************************************************************************************************
GENERANDO ALIAS EN GIT
********************************************************************************************************

    Para hacer un alias y evitar escribir un código muy largo, lo ideal es utilizar la función de alias
    Se hace de la siguiente manera.

    El siguiente es para hacer el log de commits mucho más entendible y mejor presentado con el fin de identificar los cambios que se han hecho

    alias intento1="git log --all --graph --decorate --oneline"

    
